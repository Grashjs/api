provider:
  host: https://idp.grash-cmms.com:9443

client:
  client-id: A2UHKWNjFXnWrHGxupX22wgXBKka
  client-secret: GOttUrhyghii0Xum4OlHMMIZme8a
  post-logout-uri: http://localhost:8080/login
  scope: openid
  authorization-grant-type: authorization_code
spring:
  #    tomcat:
  #      max-wait: 20000
  #      max-active: 50
  #      max-idle: 20
  #      min-idle: 15
  servlet:
    multipart:
      max-request-size: 7MB
      max-file-size: 7MB
  profiles:
    active: dev
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  security:
    oauth2:
      client:
        registration:
          wso2:
            client-name: WSO2 Identity Server
            clientId: ${client.client-id} #Change client-id
            clientSecret: ${client.client-secret} # Change client-secret
            authorization-grant-type: ${client.authorization-grant-type}
            scope:
              - ${client.scope}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
          google:
            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
        provider:
          wso2:
            issuer-uri: ${provider.host}/oauth2/token
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        format_sql: true
        id:
          new_generator_mappings: false
    defer-datasource-initialization: true
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: smtp.gmail.com
  sql:
    init:
      mode: always

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SMTP_USER}
    password: ${SMTP_PWD}
    protocol: smtp
    tls: true
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: smtp.gmail.com

server:
  port: 8080 # This is the default port anyway, but you can change it here

security:
  jwt:
    token:
      secret-key: Grash4785@jk
      expire-length: 172800000 # 1000*60*60*24*2

frontend:
  url: http://localhost:3000
mail:
  recipient: #recipient@gmail.com
superAdmin:
  role:
    name: SuperAdministratorGrash@p;l
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
